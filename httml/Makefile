GOCMD=go
GOBUILD=$(GOCMD) build
GOCLEAN=$(GOCMD) clean
GOTEST=$(GOCMD) test
BINARY_NAME=main


ifeq (run,$(firstword $(MAKECMDGOALS)))
	# use the rest as arguments for "run"
	RUN_ARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))
	# ...and turn them into do-nothing targets
	$(eval $(RUN_ARGS):;@:)
endif

.PHONY: init, dep, yacc, run, test, clean

init:
	go get golang.org/x/tools/cmd/goyacc
dep:

yacc:
	goyacc -o parser/parser.go parser/parser.go.y
	sed -i '1s/^/\/\/ CODE GENERATED BY goyacc. DO NOT EDIT.\n/' parser/parser.go
	go test -v parser/*.go
run:
	$(GOBUILD) -o $(BINARY_NAME) -v ./twlist.go
	./$(BINARY_NAME) $(RUN_ARGS)
test:
	$(GOTEST) -v ./...
clean:
	$(GOCLEAN)
	rm -f $(BINARY_NAME)
